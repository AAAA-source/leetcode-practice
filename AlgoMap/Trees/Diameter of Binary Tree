想法：經過一個點的最長diameter就是此點的左子樹深度加上右子樹深度，所以我們只要DFS 一次，查看每個節點的左子樹深度加上右子樹深度，並紀錄最大數值即可

Time Complexity : O(n) for traversing n nodes 
Space Complexity : O(h) for recursion depth (h = O(n))

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    static int depth( TreeNode* root , int& maxlength) {
        if (root == nullptr)
            return 0 ; 
        
        int a = depth(root->left , maxlength) ;
        int b = depth(root->right , maxlength) ;

        maxlength = max(maxlength , a + b) ;
        return max(a , b) + 1 ;
    }
    int diameterOfBinaryTree(TreeNode* root) {
        int maxlength = 0 ;
        depth(root , maxlength) ;

        return maxlength ;
    }
};
