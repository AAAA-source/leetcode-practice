想法：只要用變數紀錄一個最靠近0的數值，不斷更新即可

Time Complexity : O(n) for traverse the array
Space Complexity : O(1) just variables 

class Solution {
public:
    int findClosestNumber(vector<int>& nums) {
        int now = 100001 ;
        for( auto &i : nums ) {
            if ( abs(i) < abs(now) || (abs(i) == abs(now) && i > now)  ) {
                now = i ;
            }
        }  

        return now ;
    }
};

// use array instead map
class Solution {
public:
    int romanToInt(string s) {
        int count = 0 ;
        decltype(s.size()) cursor = 0 ;

        vector<int> symbols(26) ;
        symbols['I' - 'A'] = 1 ;
        symbols['V' - 'A'] = 5 ;
        symbols['X' - 'A'] = 10 ;
        symbols['L' - 'A'] = 50 ;
        symbols['C' - 'A'] = 100 ;
        symbols['D' - 'A'] = 500 ;
        symbols['M' - 'A'] = 1000 ;

        vector<int> special_symbols(26) ;
        special_symbols['V' - 'A'] = 4 ;
        special_symbols['X' - 'A'] = 9 ;
        special_symbols['L' - 'A'] = 40 ;
        special_symbols['C' - 'A'] = 90 ;
        special_symbols['D' - 'A'] = 400 ;
        special_symbols['M' - 'A'] = 900 ;

        while ( cursor != s.size() ) {
            if ( cursor + 1 == s.size() || 
            symbols[s[cursor + 1] - 'A'] <= symbols[ s[cursor]  - 'A' ]  )
                count += symbols[ s[cursor] - 'A' ] ;
            else {
                count += special_symbols[ s[cursor + 1] - 'A' ] ;
                cursor++ ;
            }
            cursor++ ;
        }
        return count ;
    }
};

Time Complexity : O(n) 
Space Complexity : O(1)
