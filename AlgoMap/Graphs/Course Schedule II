想法：在檢查是否有環的同時紀錄最早結束的node，每當一個node 結束就代表目前這個node 可被修課，因此依序放入answer vector 中並輸出即可
Time Complexity : O(m + n) for DFS 
Space Complexity : O(m + n) for recursion

class Solution {
public:
    vector<int> ans ;
    bool DFS(vector<int>&state , vector<vector<int>>& link , int index) {
        if ( state[index] == 1 )
            return false ;
        if (state[index] == 2)
            return true ;
        state[index] = 1 ;
        for(int i = 0 ; i < link[index].size() ; i++) {
            if ( !DFS(state , link , link[index][i]) )
                return false ;
        }
        state[index] = 2 ;
        ans.push_back(index) ;
        return true ;
    }

    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        vector<int> state(numCourses , 0) ; 

        vector<vector<int>> link(numCourses) ;
        for(auto &v : prerequisites) 
            link[v[0]].push_back(v[1]) ;
 
        for(int i = 0 ; i < numCourses ; i++) {
            if ( state[i] == 0 ) 
                if ( !DFS(state , link , i) )
                    return {} ;
        }

        return ans ;
    }
};
