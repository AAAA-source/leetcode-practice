想法：每個節點回傳從目前節點到葉子間的最大路徑長（如果都是負數則回傳 0，代表都不取用），而答案即是某一節點＋左路徑長＋右路徑長
因此，可使用一變數紀錄答案並用DFS走過整個樹即可

Time Complexity : O(n) for traversing tree
Space Complexity : O(n) for the recursion 


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans ; 
    int DFS(TreeNode* root) {
        if ( root == nullptr )
            return 0 ;
        
        int leftpath = DFS(root->left) ;
        int rightpath = DFS(root->right) ;

        ans = max(ans , leftpath + rightpath + root->val) ; 
        return max(root->val + max(leftpath , rightpath) , 0) ;
    }
    int maxPathSum(TreeNode* root) {
        ans = -1e8 ;
        DFS(root) ;
        return ans ;
    }
};
