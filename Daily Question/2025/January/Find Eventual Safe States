想法：在圖上做一次 DFS，如果某一點皆符合就把狀態定義為 2，確認失敗的則定為 -1；如果有cycle 也須判定為失敗（包含 self-loop）

Time Complexity : O(m + n) for DFS
Space Complexity : O(m + n) for DFS

class Solution {
public:
    bool checked(vector<vector<int>>& graph , int index , vector<int>& visited) {
        if ( visited[index] == 2 )
            return true ;
        if ( visited[index] == -1 || visited[index] == 1 )
            return false ;

        visited[index] = 1 ;
        for(auto &i : graph[index]) {
            if ( i == index || !checked(graph , i , visited) ) {
                visited[index] = -1 ;
                return false ;
            }
        }
        visited[index] = 2 ;
        return true ;
    }
    vector<int> eventualSafeNodes(vector<vector<int>>& graph) {
        int n = graph.size() ;
        vector<int> visited(n) ;
        vector<int> ans ;
        for(int i = 0 ; i < n ; i++) {
            if ( visited[i] == 0 )
                checked(graph , i , visited) ;
            if ( visited[i] == 2 )
                ans.push_back(i) ;
        }
        
        return ans ;
    }
};
